/*
 * generated by Xtext 2.26.0
 */
grammar InternalPAML;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.paml.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.paml.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.paml.services.PAMLGrammarAccess;

}
@parser::members {
	private PAMLGrammarAccess grammarAccess;

	public void setGrammarAccess(PAMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRulePAML
entryRulePAML
:
{ before(grammarAccess.getPAMLRule()); }
	 rulePAML
{ after(grammarAccess.getPAMLRule()); } 
	 EOF 
;

// Rule PAML
rulePAML 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPAMLAccess().getGroup()); }
		(rule__PAML__Group__0)
		{ after(grammarAccess.getPAMLAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMeta
entryRuleMeta
:
{ before(grammarAccess.getMetaRule()); }
	 ruleMeta
{ after(grammarAccess.getMetaRule()); } 
	 EOF 
;

// Rule Meta
ruleMeta 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMetaAccess().getGroup()); }
		(rule__Meta__Group__0)
		{ after(grammarAccess.getMetaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTask
entryRuleTask
:
{ before(grammarAccess.getTaskRule()); }
	 ruleTask
{ after(grammarAccess.getTaskRule()); } 
	 EOF 
;

// Rule Task
ruleTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTaskAccess().getGroup()); }
		(rule__Task__Group__0)
		{ after(grammarAccess.getTaskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ListStyle
ruleListStyle
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListStyleAccess().getAlternatives()); }
		(rule__ListStyle__Alternatives)
		{ after(grammarAccess.getListStyleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ListRotation
ruleListRotation
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListRotationAccess().getAlternatives()); }
		(rule__ListRotation__Alternatives)
		{ after(grammarAccess.getListRotationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListStyle__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListStyleAccess().getNUMBERSEnumLiteralDeclaration_0()); }
		('numbers')
		{ after(grammarAccess.getListStyleAccess().getNUMBERSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getListStyleAccess().getLETTERSEnumLiteralDeclaration_1()); }
		('letters')
		{ after(grammarAccess.getListStyleAccess().getLETTERSEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getListStyleAccess().getROMANEnumLiteralDeclaration_2()); }
		('roman')
		{ after(grammarAccess.getListStyleAccess().getROMANEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRotation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListRotationAccess().getALTERNATINGEnumLiteralDeclaration_0()); }
		('alternating')
		{ after(grammarAccess.getListRotationAccess().getALTERNATINGEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getListRotationAccess().getSAMEEnumLiteralDeclaration_1()); }
		('same')
		{ after(grammarAccess.getListRotationAccess().getSAMEEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PAML__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PAML__Group__0__Impl
	rule__PAML__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PAML__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPAMLAccess().getPamlKeyword_0()); }
	'<paml>'
	{ after(grammarAccess.getPAMLAccess().getPamlKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PAML__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PAML__Group__1__Impl
	rule__PAML__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PAML__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPAMLAccess().getMetaInformationAssignment_1()); }
	(rule__PAML__MetaInformationAssignment_1)
	{ after(grammarAccess.getPAMLAccess().getMetaInformationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PAML__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PAML__Group__2__Impl
	rule__PAML__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PAML__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPAMLAccess().getPrecodeAssignment_2()); }
	(rule__PAML__PrecodeAssignment_2)?
	{ after(grammarAccess.getPAMLAccess().getPrecodeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PAML__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PAML__Group__3__Impl
	rule__PAML__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PAML__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getPAMLAccess().getTasksAssignment_3()); }
		(rule__PAML__TasksAssignment_3)
		{ after(grammarAccess.getPAMLAccess().getTasksAssignment_3()); }
	)
	(
		{ before(grammarAccess.getPAMLAccess().getTasksAssignment_3()); }
		(rule__PAML__TasksAssignment_3)*
		{ after(grammarAccess.getPAMLAccess().getTasksAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PAML__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PAML__Group__4__Impl
	rule__PAML__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PAML__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPAMLAccess().getPostcodeAssignment_4()); }
	(rule__PAML__PostcodeAssignment_4)?
	{ after(grammarAccess.getPAMLAccess().getPostcodeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PAML__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PAML__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PAML__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPAMLAccess().getPamlKeyword_5()); }
	'</paml>'
	{ after(grammarAccess.getPAMLAccess().getPamlKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Meta__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Meta__Group__0__Impl
	rule__Meta__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaAccess().getMetaKeyword_0()); }
	'<meta'
	{ after(grammarAccess.getMetaAccess().getMetaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Meta__Group__1__Impl
	rule__Meta__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaAccess().getGroup_1()); }
	(rule__Meta__Group_1__0)?
	{ after(grammarAccess.getMetaAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Meta__Group__2__Impl
	rule__Meta__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaAccess().getGroup_2()); }
	(rule__Meta__Group_2__0)
	{ after(grammarAccess.getMetaAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Meta__Group__3__Impl
	rule__Meta__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaAccess().getGroup_3()); }
	(rule__Meta__Group_3__0)
	{ after(grammarAccess.getMetaAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Meta__Group__4__Impl
	rule__Meta__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaAccess().getGroup_4()); }
	(rule__Meta__Group_4__0)
	{ after(grammarAccess.getMetaAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Meta__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaAccess().getSolidusGreaterThanSignKeyword_5()); }
	'/>'
	{ after(grammarAccess.getMetaAccess().getSolidusGreaterThanSignKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Meta__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Meta__Group_1__0__Impl
	rule__Meta__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaAccess().getLangKeyword_1_0()); }
	'lang'
	{ after(grammarAccess.getMetaAccess().getLangKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Meta__Group_1__1__Impl
	rule__Meta__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getMetaAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Meta__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaAccess().getNameAssignment_1_2()); }
	(rule__Meta__NameAssignment_1_2)
	{ after(grammarAccess.getMetaAccess().getNameAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Meta__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Meta__Group_2__0__Impl
	rule__Meta__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaAccess().getListStyleKeyword_2_0()); }
	'listStyle'
	{ after(grammarAccess.getMetaAccess().getListStyleKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Meta__Group_2__1__Impl
	rule__Meta__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaAccess().getEqualsSignKeyword_2_1()); }
	'='
	{ after(grammarAccess.getMetaAccess().getEqualsSignKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Meta__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaAccess().getListStyleAssignment_2_2()); }
	(rule__Meta__ListStyleAssignment_2_2)
	{ after(grammarAccess.getMetaAccess().getListStyleAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Meta__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Meta__Group_3__0__Impl
	rule__Meta__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaAccess().getListRotationKeyword_3_0()); }
	'listRotation'
	{ after(grammarAccess.getMetaAccess().getListRotationKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Meta__Group_3__1__Impl
	rule__Meta__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaAccess().getEqualsSignKeyword_3_1()); }
	'='
	{ after(grammarAccess.getMetaAccess().getEqualsSignKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Meta__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaAccess().getListRotationAssignment_3_2()); }
	(rule__Meta__ListRotationAssignment_3_2)
	{ after(grammarAccess.getMetaAccess().getListRotationAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Meta__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Meta__Group_4__0__Impl
	rule__Meta__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaAccess().getStartCommentKeyword_4_0()); }
	'startComment'
	{ after(grammarAccess.getMetaAccess().getStartCommentKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Meta__Group_4__1__Impl
	rule__Meta__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaAccess().getEqualsSignKeyword_4_1()); }
	'='
	{ after(grammarAccess.getMetaAccess().getEqualsSignKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Meta__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaAccess().getStringAssignment_4_2()); }
	(rule__Meta__StringAssignment_4_2)
	{ after(grammarAccess.getMetaAccess().getStringAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__0__Impl
	rule__Task__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getTaskKeyword_0()); }
	'<task'
	{ after(grammarAccess.getTaskAccess().getTaskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__1__Impl
	rule__Task__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getGroup_1()); }
	(rule__Task__Group_1__0)?
	{ after(grammarAccess.getTaskAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__2__Impl
	rule__Task__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getGroup_2()); }
	(rule__Task__Group_2__0)
	{ after(grammarAccess.getTaskAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__3__Impl
	rule__Task__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getGreaterThanSignKeyword_3()); }
	'>'
	{ after(grammarAccess.getTaskAccess().getGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__4__Impl
	rule__Task__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getCodeAssignment_4()); }
	(rule__Task__CodeAssignment_4)?
	{ after(grammarAccess.getTaskAccess().getCodeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__5__Impl
	rule__Task__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getTestAssignment_5()); }
	(rule__Task__TestAssignment_5)?
	{ after(grammarAccess.getTaskAccess().getTestAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__6__Impl
	rule__Task__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getSubtasksAssignment_6()); }
	(rule__Task__SubtasksAssignment_6)*
	{ after(grammarAccess.getTaskAccess().getSubtasksAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getTaskKeyword_7()); }
	'</task>'
	{ after(grammarAccess.getTaskAccess().getTaskKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_1__0__Impl
	rule__Task__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getTitleKeyword_1_0()); }
	'title'
	{ after(grammarAccess.getTaskAccess().getTitleKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_1__1__Impl
	rule__Task__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getTaskAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getStringAssignment_1_2()); }
	(rule__Task__StringAssignment_1_2)
	{ after(grammarAccess.getTaskAccess().getStringAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_2__0__Impl
	rule__Task__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getDescriptionKeyword_2_0()); }
	'description'
	{ after(grammarAccess.getTaskAccess().getDescriptionKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_2__1__Impl
	rule__Task__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getEqualsSignKeyword_2_1()); }
	'='
	{ after(grammarAccess.getTaskAccess().getEqualsSignKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getStringAssignment_2_2()); }
	(rule__Task__StringAssignment_2_2)
	{ after(grammarAccess.getTaskAccess().getStringAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PAML__MetaInformationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPAMLAccess().getMetaInformationMetaParserRuleCall_1_0()); }
		ruleMeta
		{ after(grammarAccess.getPAMLAccess().getMetaInformationMetaParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PAML__PrecodeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPAMLAccess().getPrecodeCODETerminalRuleCall_2_0()); }
		RULE_CODE
		{ after(grammarAccess.getPAMLAccess().getPrecodeCODETerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PAML__TasksAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPAMLAccess().getTasksTaskParserRuleCall_3_0()); }
		ruleTask
		{ after(grammarAccess.getPAMLAccess().getTasksTaskParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PAML__PostcodeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPAMLAccess().getPostcodeCODETerminalRuleCall_4_0()); }
		RULE_CODE
		{ after(grammarAccess.getPAMLAccess().getPostcodeCODETerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__NameAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaAccess().getNameIDTerminalRuleCall_1_2_0()); }
		RULE_ID
		{ after(grammarAccess.getMetaAccess().getNameIDTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__ListStyleAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaAccess().getListStyleListStyleEnumRuleCall_2_2_0()); }
		ruleListStyle
		{ after(grammarAccess.getMetaAccess().getListStyleListStyleEnumRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__ListRotationAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaAccess().getListRotationListRotationEnumRuleCall_3_2_0()); }
		ruleListRotation
		{ after(grammarAccess.getMetaAccess().getListRotationListRotationEnumRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Meta__StringAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaAccess().getStringSTRINGTerminalRuleCall_4_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getMetaAccess().getStringSTRINGTerminalRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__StringAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getStringSTRINGTerminalRuleCall_1_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getTaskAccess().getStringSTRINGTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__StringAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getStringSTRINGTerminalRuleCall_2_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getTaskAccess().getStringSTRINGTerminalRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__CodeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getCodeCODETerminalRuleCall_4_0()); }
		RULE_CODE
		{ after(grammarAccess.getTaskAccess().getCodeCODETerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__TestAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getTestTESTTerminalRuleCall_5_0()); }
		RULE_TEST
		{ after(grammarAccess.getTaskAccess().getTestTESTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__SubtasksAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getSubtasksTaskParserRuleCall_6_0()); }
		ruleTask
		{ after(grammarAccess.getTaskAccess().getSubtasksTaskParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_CODE : '<code>' ( options {greedy=false;} : . )*'</code>';

RULE_TEST : '<test>' ( options {greedy=false;} : . )*'</test>';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
